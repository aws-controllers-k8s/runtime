// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	cache "sigs.k8s.io/controller-runtime/pkg/cache"
)

// newCacheFunc is an autogenerated mock type for the newCacheFunc type
type newCacheFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: config, namespace
func (_m *newCacheFunc) Execute(config cache.Config, namespace string) cache.Cache {
	ret := _m.Called(config, namespace)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 cache.Cache
	if rf, ok := ret.Get(0).(func(cache.Config, string) cache.Cache); ok {
		r0 = rf(config, namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cache.Cache)
		}
	}

	return r0
}

// newNewCacheFunc creates a new instance of newCacheFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newNewCacheFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *newCacheFunc {
	mock := &newCacheFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
