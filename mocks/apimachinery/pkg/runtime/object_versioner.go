// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// ObjectVersioner is an autogenerated mock type for the ObjectVersioner type
type ObjectVersioner struct {
	mock.Mock
}

// ConvertToVersion provides a mock function with given fields: in, gv
func (_m *ObjectVersioner) ConvertToVersion(in runtime.Object, gv runtime.GroupVersioner) (runtime.Object, error) {
	ret := _m.Called(in, gv)

	var r0 runtime.Object
	if rf, ok := ret.Get(0).(func(runtime.Object, runtime.GroupVersioner) runtime.Object); ok {
		r0 = rf(in, gv)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(runtime.Object)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(runtime.Object, runtime.GroupVersioner) error); ok {
		r1 = rf(in, gv)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewObjectVersioner interface {
	mock.TestingT
	Cleanup(func())
}

// NewObjectVersioner creates a new instance of ObjectVersioner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewObjectVersioner(t mockConstructorTestingTNewObjectVersioner) *ObjectVersioner {
	mock := &ObjectVersioner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
