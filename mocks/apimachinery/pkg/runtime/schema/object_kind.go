// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
)

// ObjectKind is an autogenerated mock type for the ObjectKind type
type ObjectKind struct {
	mock.Mock
}

// GroupVersionKind provides a mock function with given fields:
func (_m *ObjectKind) GroupVersionKind() schema.GroupVersionKind {
	ret := _m.Called()

	var r0 schema.GroupVersionKind
	if rf, ok := ret.Get(0).(func() schema.GroupVersionKind); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(schema.GroupVersionKind)
	}

	return r0
}

// SetGroupVersionKind provides a mock function with given fields: kind
func (_m *ObjectKind) SetGroupVersionKind(kind schema.GroupVersionKind) {
	_m.Called(kind)
}

type mockConstructorTestingTNewObjectKind interface {
	mock.TestingT
	Cleanup(func())
}

// NewObjectKind creates a new instance of ObjectKind. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewObjectKind(t mockConstructorTestingTNewObjectKind) *ObjectKind {
	mock := &ObjectKind{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
